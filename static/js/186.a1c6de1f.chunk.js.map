{"version":3,"file":"static/js/186.a1c6de1f.chunk.js","mappings":"+RAEMA,EAAU,mCAEhBC,EAAAA,SAAAA,QADgB,gCAEhBA,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,GAGJ,IAAMG,EAAsB,WAIjC,OAHAF,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,GAEJI,IAAAA,IACA,sBACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,WACrBC,OAAM,SAAAC,GACL,MAAMA,MAKCC,EAAqB,SAAAC,GAMhC,OALAX,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTa,SAAU,SAGLT,IAAAA,IAAU,SAAWQ,GAAIP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAKrCO,EAA2B,SAAAC,GAQtC,OAPAd,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTe,MAAAA,EACAF,SAAU,QACVG,KAAM,EACNC,eAAe,GAEVb,IAAAA,IAAU,gBAAgBC,MAAK,SAAAC,GACpC,OAAOA,EAAIC,KAAKC,YAKPU,EAAoB,SAAAN,GAM/B,OALAX,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTa,SAAU,QACVG,KAAM,GAEDZ,IAAAA,IAAU,SAAWQ,EAAK,YAAYP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YAGvDW,EAAkB,SAAAP,GAK7B,OAJAX,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTa,SAAU,SAELT,IAAAA,IAAU,SAAWQ,EAAK,YAAYP,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKa,U,gFClBpE,UAvCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAsBF,EAAAA,EAAAA,UAAS,MAA/B,eAAOX,EAAP,KAAYc,EAAZ,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAdAE,EAAAA,EAAAA,YAAU,YACRT,EAAAA,EAAAA,IAAkBO,GACfpB,MAAK,SAAAE,GACJ,GAAoB,IAAhBA,EAAKqB,OACP,MAAM,IAAIC,MAAM,iBAElBN,EAAWhB,MAEZE,OAAM,SAAAC,GACLoB,QAAQC,IAAIrB,GACZc,EAAOd,QAEV,CAACe,KAGF,8BACGf,GACC,oEAEA,wBACGY,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOrB","sources":["API/API.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios, { defaults } from 'axios';\n\nconst API_KEY = '0c691c9ea36cc638c018e3ab76aef558';\nconst baseURL = 'https://api.themoviedb.org/3/';\ndefaults.baseURL = baseURL;\ndefaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingTodayAPI = () => {\n  defaults.params = {\n    api_key: API_KEY,\n  };\n  return axios\n    .get('trending/movie/day')\n    .then(res => res.data.results)\n    .catch(err => {\n      throw err;\n    });\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const getOneMovieByIdAPI = id => {\n  defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  return axios.get('movie/' + id).then(res => res.data);\n};\n\n//https:api.themoviedb.org/3/search/movie?\n//api_key =<< api_key >>& language=en - US & page=1 & include_adult=false\nexport const getMoviesListBySearchAPI = query => {\n  defaults.params = {\n    api_key: API_KEY,\n    query,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  };\n  return axios.get('search/movie').then(res => {\n    return res.data.results;\n  });\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport const getReviewsByIdAPI = id => {\n  defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  return axios.get('movie/' + id + '/reviews').then(res => res.data.results);\n};\n\nexport const getCastsByIdAPI = id => {\n  defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  return axios.get('movie/' + id + '/credits').then(res => res.data.cast);\n};\n","import { useEffect, useState } from 'react';\nimport { getReviewsByIdAPI } from '../../API/API';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [err, setErr] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getReviewsByIdAPI(movieId)\n      .then(data => {\n        if (data.length === 0) {\n          throw new Error('Data is empty');\n        }\n        setReviews(data);\n      })\n      .catch(err => {\n        console.log(err);\n        setErr(err);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {err ? (\n        <p>We don`t have any reviews for this time</p>\n      ) : (\n        <ul>\n          {reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","defaults","api_key","getTrendingTodayAPI","axios","then","res","data","results","catch","err","getOneMovieByIdAPI","id","language","getMoviesListBySearchAPI","query","page","include_adult","getReviewsByIdAPI","getCastsByIdAPI","cast","useState","reviews","setReviews","setErr","movieId","useParams","useEffect","length","Error","console","log","map","review","author","content"],"sourceRoot":""}