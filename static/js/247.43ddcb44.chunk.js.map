{"version":3,"file":"static/js/247.43ddcb44.chunk.js","mappings":"+RAEMA,EAAU,mCAEhBC,EAAAA,SAAAA,QADgB,gCAEhBA,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,GAGJ,IAAMG,EAAsB,WAIjC,OAHAF,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,GAEJI,IAAAA,IAAU,sBAAsBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YAIjDC,EAAqB,SAAAC,GAMhC,OALAT,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTW,SAAU,SAGLP,IAAAA,IAAU,SAAWM,GAASL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAK1CK,EAA2B,SAAAC,GAQtC,OAPAZ,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTa,MAAAA,EACAF,SAAU,QACVG,KAAM,EACNC,eAAe,GAEVX,IAAAA,IAAU,gBAAgBC,MAAK,SAAAC,GACpC,OAAOA,EAAIC,KAAKC,YAKPQ,EAAoB,SAAAN,GAM/B,OALAT,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTW,SAAU,QACVG,KAAM,GAEDV,IAAAA,IAAA,gBAAmBM,EAAnB,aAAsCL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKC,YAGvDS,EAAkB,SAAAP,GAK7B,OAJAT,EAAAA,SAAAA,OAAkB,CAChBC,QAASF,EACTW,SAAU,SAELP,IAAAA,IAAA,gBAAmBM,EAAnB,aAAsCL,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAKW,U,iFCjBpE,UAnCa,WACX,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAUR,OARAa,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAgBP,GACbL,MAAK,SAAAE,GACJc,EAASd,MAEViB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACf,KAGF,+BACE,+BACGU,QADH,IACGA,OADH,EACGA,EAAOQ,KAAI,SAAAC,GACV,IAAQC,EAA+CD,EAA/CC,GAAIC,EAA2CF,EAA3CE,cAAeC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aACtC,OACE,2BACE,gBACEC,IAAKD,GAnBJ,kCAmB6BA,EAC9BE,IAAI,GACJC,MAAM,WAER,uBAAIL,KACJ,uCAAeC,OAPRF","sources":["API/API.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios, { defaults } from 'axios';\n\nconst API_KEY = '0c691c9ea36cc638c018e3ab76aef558';\nconst baseURL = 'https://api.themoviedb.org/3/';\ndefaults.baseURL = baseURL;\ndefaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendingTodayAPI = () => {\n  defaults.params = {\n    api_key: API_KEY,\n  };\n  return axios.get('trending/movie/day').then(res => res.data.results);\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\nexport const getOneMovieByIdAPI = movieId => {\n  defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n\n  return axios.get('movie/' + movieId).then(res => res.data);\n};\n\n//https:api.themoviedb.org/3/search/movie?\n//api_key =<< api_key >>& language=en - US & page=1 & include_adult=false\nexport const getMoviesListBySearchAPI = query => {\n  defaults.params = {\n    api_key: API_KEY,\n    query,\n    language: 'en-US',\n    page: 1,\n    include_adult: false,\n  };\n  return axios.get('search/movie').then(res => {\n    return res.data.results;\n  });\n};\n\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1\nexport const getReviewsByIdAPI = movieId => {\n  defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    page: 1,\n  };\n  return axios.get(`movie/${movieId}/reviews`).then(res => res.data.results);\n};\n\nexport const getCastsByIdAPI = movieId => {\n  defaults.params = {\n    api_key: API_KEY,\n    language: 'en-US',\n  };\n  return axios.get(`movie/${movieId}/credits`).then(res => res.data.cast);\n};\n","import { useEffect, useState } from 'react';\nimport { getCastsByIdAPI } from '../../API/API';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [casts, setCasts] = useState([]);\n  const imgUrl = 'https://image.tmdb.org/t/p/w400';\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCastsByIdAPI(movieId)\n      .then(data => {\n        setCasts(data);\n      })\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {casts?.map(author => {\n          const { id, original_name, character, profile_path } = author;\n          return (\n            <li key={id}>\n              <img\n                src={profile_path && imgUrl + profile_path}\n                alt=\"\"\n                width=\"150px\"\n              />\n              <p>{original_name}</p>\n              <p>Character: {character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","defaults","api_key","getTrendingTodayAPI","axios","then","res","data","results","getOneMovieByIdAPI","movieId","language","getMoviesListBySearchAPI","query","page","include_adult","getReviewsByIdAPI","getCastsByIdAPI","cast","useState","casts","setCasts","useParams","useEffect","catch","err","console","log","map","author","id","original_name","character","profile_path","src","alt","width"],"sourceRoot":""}